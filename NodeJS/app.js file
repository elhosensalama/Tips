app.js
 ** ده اول ملف 
 
 1 - بستدعي فيه ال Express و Morgan و path. 👇

const express = require('express');
const morgan = require('morgan');
const path = require('path');

 2 - بستدعي مجموعه مكاتب علشان ال security. 👇

const rateLimit = require('express-rate-limit');
	=> دي علشان احدد عدد معين من ال requests علي السيرفر
	
const helmet = require('helmet');
	=> دي علشان اخلي ال http headers تكون محمية
	
const xss = require('xss-clean');
	=> دي علشان اعمل فلتره ضد اي هجوم XSS
	
const mongoSanitize = require('express-mongo-sanitize');
	=> دي علشان اعمل فلترة ضد اي هجوم NoSQL query injection
	
const hpp = require('hpp');
	=> دي علشان احدد عدد معين من المتغيرات ف ال url
	
const cookieParser = require('cookie-parser');
	=> دي علشان استقبل ال cookies من ال browser

 3 - بستدعي ال AppError و ال errorHandler و ال Routers. 👇

const AppError = require('./utils/appError');
const errorHandler = require('./controllers/errorController');
const tourRouter = require('./routes/tourRoutes');

 4 - بعمل الابلكيشن من ال express. 👇
const app = express();

 5 - ببدا اعرف express ان هبدا استخدم pug ك templete engine. 👇
 
app.set('view engine', 'pug');
app.set('views', path.join(__dirname, 'views'));

 ** ببدا استخدم ال GLOBAL Middlewares. 👇

 6 - ببدا اشغل ملفات ال front ال هي static ف ملف ال public. 👇 
app.use(express.static(path.join(__dirname, 'public')));

 7 - ببدا استخدم helmet ك middleware. 👇
app.use(helmet());

 8 - ببدا استخدم morgan ف حاله ال development. 👇
if (process.env.NODE_ENV === 'development') {
    app.use(morgan('dev'));
}
 9 - ببدا استخدم rateLimit و اخليه مثلا 100 request لكل ساعه. 👇
const limiter = rateLimit({
    max: 100,
    windowMs: 60 * 60 * 1000,
    message: 'Too many requests from this IP , try again after 1 hour',
});

app.use('/api', limiter);

 10 - ببدا اعمل parsing لل data سواء json او cookies. 👇
app.use(express.json({ limit: '10kb' }));
app.use(cookieParser());
* لما بعمل parse json الداتا ببتخزن ف ال req.body
* لما بعمل parse cookie الداتا ببتخزن ف ال res.cookie

 11 - ببدا استخدم mongoSanitize ك middleware. 👇
app.use(mongoSanitize());

 12 - ببدا استخدم xss ك middleware. 👇
app.use(xss());

13 - ببدا استخدم hpp ك middleware واحدد له المتغيرات المسموح بيها. 👇

app.use(
    hpp({
        whitelist: [
            'duration',
            'ratingQuantity',
            'ratingAverage',
            'maxGroupSize',
            'price',
            'difficulty',
        ],
    })
);
15 - اقدر اعمل middleware ك test. 👇

app.use((req, res, next) => {
    // console.log('hello from the middleware 1');
    req.requestTime = new Date().toISOString();
    next();
});

16 - ببدا استخدم ال Routes ال استدعيتها و احدد لها روت معين. 👇

app.use('/', viewRouter);
app.use('/api/v1/tours', tourRouter);
app.use('/api/v1/users', userRouter);

17 - بعمل middleware يطلع ايرور لو اليوزر دخل علي روت مش متعرف. 👇

app.all('*', (req, res, next) => {
	next(new AppError(`Can't find ${req.originalUrl} on this server`, 404));
});

18 - بستخدم ال errorHandler. 👇

app.use(errorHandler);

19 - اخر حاجه بعمل export لل app علشان استخدمه ف ال server. 👇

module.exports = app;
